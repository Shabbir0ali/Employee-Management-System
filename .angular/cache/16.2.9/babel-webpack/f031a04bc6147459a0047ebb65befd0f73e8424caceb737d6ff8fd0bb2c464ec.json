{"ast":null,"code":"import { Employee } from '../employee';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../employee.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class UpdateEmployeeComponent {\n  constructor(employeeService, route, router) {\n    this.employeeService = employeeService;\n    this.route = route;\n    this.router = router;\n    this.employee = new Employee();\n    this.id = 0; // Initialize with a default value, or assign it according to your requirements.\n  }\n\n  ngOnInit() {\n    this.id = this.route.snapshot.params['id'];\n    this.employeeService.getEmployeeById(this.id).subscribe(data => {\n      this.employee = data;\n    }, error => console.log(error));\n  }\n  onSubmit() {\n    this.employeeService.updateEmployee(this.id, this.employee).subscribe(data => {\n      this.goToEmployeeList();\n    }, error => console.log(error));\n  }\n  goToEmployeeList() {\n    this.router.navigate(['/employees']);\n  }\n  static #_ = this.ɵfac = function UpdateEmployeeComponent_Factory(t) {\n    return new (t || UpdateEmployeeComponent)(i0.ɵɵdirectiveInject(i1.EmployeeService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UpdateEmployeeComponent,\n    selectors: [[\"app-update-employee\"]],\n    decls: 18,\n    vars: 3,\n    consts: [[1, \"col-md-6\", \"offset-md-3\"], [1, \"mt-4\", \"mb-3\"], [3, \"ngSubmit\"], [1, \"form-group\"], [1, \"mb-2\"], [\"type\", \"text\", \"id\", \"firstName\", \"name\", \"firstName\", 1, \"form-control\", \"mb-3\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"id\", \"lastName\", \"name\", \"lastName\", 1, \"form-control\", \"mb-3\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"id\", \"emailId\", \"name\", \"emailId\", 1, \"form-control\", \"mb-3\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\"]],\n    template: function UpdateEmployeeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h3\", 1);\n        i0.ɵɵtext(2, \"Update Employee\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function UpdateEmployeeComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(4, \"div\", 3)(5, \"label\", 4);\n        i0.ɵɵtext(6, \"First Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function UpdateEmployeeComponent_Template_input_ngModelChange_7_listener($event) {\n          return ctx.employee.firstName = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"div\", 3)(9, \"label\", 4);\n        i0.ɵɵtext(10, \" Last Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"input\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function UpdateEmployeeComponent_Template_input_ngModelChange_11_listener($event) {\n          return ctx.employee.lastName = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"div\", 3)(13, \"label\", 4);\n        i0.ɵɵtext(14, \" Email Id\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"input\", 7);\n        i0.ɵɵlistener(\"ngModelChange\", function UpdateEmployeeComponent_Template_input_ngModelChange_15_listener($event) {\n          return ctx.employee.emailId = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"button\", 8);\n        i0.ɵɵtext(17, \"Submit\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngModel\", ctx.employee.firstName);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.employee.lastName);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.employee.emailId);\n      }\n    },\n    dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Employee","UpdateEmployeeComponent","constructor","employeeService","route","router","employee","id","ngOnInit","snapshot","params","getEmployeeById","subscribe","data","error","console","log","onSubmit","updateEmployee","goToEmployeeList","navigate","_","i0","ɵɵdirectiveInject","i1","EmployeeService","i2","ActivatedRoute","Router","_2","selectors","decls","vars","consts","template","UpdateEmployeeComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","UpdateEmployeeComponent_Template_form_ngSubmit_3_listener","UpdateEmployeeComponent_Template_input_ngModelChange_7_listener","$event","firstName","UpdateEmployeeComponent_Template_input_ngModelChange_11_listener","lastName","UpdateEmployeeComponent_Template_input_ngModelChange_15_listener","emailId","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\Dell\\OneDrive\\Desktop\\Angular Spring boot\\angular-frontend\\src\\app\\update-employee\\update-employee.component.ts","C:\\Users\\Dell\\OneDrive\\Desktop\\Angular Spring boot\\angular-frontend\\src\\app\\update-employee\\update-employee.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { EmployeeService } from '../employee.service';\nimport { Employee } from '../employee';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-update-employee',\n  templateUrl: './update-employee.component.html',\n  styleUrls: ['./update-employee.component.css']\n})\nexport class UpdateEmployeeComponent implements OnInit {\n\n  id: number;\n\n  employee: Employee = new Employee();\n\n  constructor(private employeeService: EmployeeService, private route: ActivatedRoute , private router : Router) {\n    this.id = 0; // Initialize with a default value, or assign it according to your requirements.\n  }\n\n  ngOnInit(): void {\n\n    this.id = this.route.snapshot.params['id'];\n    this.employeeService.getEmployeeById(this.id).subscribe(data => {\n      this.employee = data;\n    },\n      error => console.log(error));\n  }\n  onSubmit() {\n    this.employeeService.updateEmployee(this.id,this.employee).subscribe(data =>{\n      this.goToEmployeeList();\n    },\n    error => console.log(error)\n    );\n  }\ngoToEmployeeList() {\n    this.router.navigate(['/employees']);\n  }\n}","<div class=\"col-md-6 offset-md-3\">\n    <h3 class=\"mt-4 mb-3\">Update Employee</h3>\n    <form (ngSubmit)=\"onSubmit()\">\n        <div class=\"form-group\">\n            <label class=\"mb-2\">First Name</label>\n            <input type=\"text\" class=\"form-control mb-3\" id=\"firstName\" [(ngModel)]=\"employee.firstName\" name=\"firstName\">\n        </div>\n        <div class=\"form-group\">\n            <label class=\"mb-2\"> Last Name</label>\n            <input type=\"text\" class=\"form-control  mb-3\" id=\"lastName\" [(ngModel)]=\"employee.lastName\" name=\"lastName\">\n        </div>\n        <div class=\"form-group\">\n            <label class=\"mb-2\"> Email Id</label>\n            <input type=\"text\" class=\"form-control mb-3\" id=\"emailId\" [(ngModel)]=\"employee. emailId\" name=\"emailId\">\n        </div>\n        <button class=\"btn btn-success\" type=\"submit\">Submit</button>\n    \n    </form></div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}