{"ast":null,"code":"import { Employee } from '../employee';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../employee.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class CreateEmployeeComponent {\n  constructor(employeeService, router) {\n    this.employeeService = employeeService;\n    this.router = router;\n    this.employee = new Employee();\n  }\n  onSubmit() {\n    console.log(this.employee);\n    this.saveEmployee();\n  }\n  saveEmployee() {\n    this.employeeService.createEmployee(this.employee).subscribe(data => {\n      console.log(data);\n      this.goToEmployeeList();\n    }, error => console.log(error));\n  }\n  goToEmployeeList() {\n    this.router.navigate(['/employees']);\n  }\n  ngOnInit() {}\n  static #_ = this.ɵfac = function CreateEmployeeComponent_Factory(t) {\n    return new (t || CreateEmployeeComponent)(i0.ɵɵdirectiveInject(i1.EmployeeService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreateEmployeeComponent,\n    selectors: [[\"app-create-employee\"]],\n    decls: 19,\n    vars: 3,\n    consts: [[1, \"col-md-6\", \"offset-md-3\"], [1, \"p-3\", \"pt-1\", \"mt-4\", 2, \"background\", \"#f8f8f8\", \"box-shadow\", \"0 2px 5px rgba(0, 0, 0, 0.5)\", 3, \"ngSubmit\"], [1, \"mt-4\", \"mb-3\", \"text-center\"], [1, \"form-group\"], [1, \"mb-2\"], [\"type\", \"text\", \"id\", \"firstName\", \"name\", \"firstName\", 1, \"form-control\", \"mb-3\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"id\", \"lastName\", \"name\", \"lastName\", 1, \"form-control\", \"mb-3\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"id\", \"emailId\", \"name\", \"emailId\", 1, \"form-control\", \"mb-3\", 3, \"ngModel\", \"ngModelChange\"], [1, \"text-center\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\"]],\n    template: function CreateEmployeeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function CreateEmployeeComponent_Template_form_ngSubmit_1_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(2, \"h3\", 2);\n        i0.ɵɵtext(3, \"Update Employee\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 3)(5, \"label\", 4);\n        i0.ɵɵtext(6, \"First Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function CreateEmployeeComponent_Template_input_ngModelChange_7_listener($event) {\n          return ctx.employee.firstName = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"div\", 3)(9, \"label\", 4);\n        i0.ɵɵtext(10, \" Last Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"input\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function CreateEmployeeComponent_Template_input_ngModelChange_11_listener($event) {\n          return ctx.employee.lastName = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"div\", 3)(13, \"label\", 4);\n        i0.ɵɵtext(14, \" Email Id\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"input\", 7);\n        i0.ɵɵlistener(\"ngModelChange\", function CreateEmployeeComponent_Template_input_ngModelChange_15_listener($event) {\n          return ctx.employee.emailId = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"div\", 8)(17, \"button\", 9);\n        i0.ɵɵtext(18, \"Submit\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngModel\", ctx.employee.firstName);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.employee.lastName);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.employee.emailId);\n      }\n    },\n    dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Employee","CreateEmployeeComponent","constructor","employeeService","router","employee","onSubmit","console","log","saveEmployee","createEmployee","subscribe","data","goToEmployeeList","error","navigate","ngOnInit","_","i0","ɵɵdirectiveInject","i1","EmployeeService","i2","Router","_2","selectors","decls","vars","consts","template","CreateEmployeeComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","CreateEmployeeComponent_Template_form_ngSubmit_1_listener","ɵɵtext","ɵɵelementEnd","CreateEmployeeComponent_Template_input_ngModelChange_7_listener","$event","firstName","CreateEmployeeComponent_Template_input_ngModelChange_11_listener","lastName","CreateEmployeeComponent_Template_input_ngModelChange_15_listener","emailId","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\Dell\\OneDrive\\Desktop\\Angular Spring boot\\angular-frontend\\src\\app\\create-employee\\create-employee.component.ts","C:\\Users\\Dell\\OneDrive\\Desktop\\Angular Spring boot\\angular-frontend\\src\\app\\create-employee\\create-employee.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Employee } from '../employee';\nimport { EmployeeService } from '../employee.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-create-employee',\n  templateUrl: './create-employee.component.html',\n  styleUrls: ['./create-employee.component.css']\n})\nexport class CreateEmployeeComponent implements OnInit {\n\n  employee: Employee = new Employee();\n\n  constructor(private employeeService: EmployeeService, private router: Router) {\n  }\n  onSubmit() {\n    console.log(this.employee);\n    this.saveEmployee();\n  }\n\n  saveEmployee() {\n    this.employeeService.createEmployee(this.employee).subscribe(data => {\n      console.log(data);\n      this.goToEmployeeList();\n    }, error => console.log(error));\n  }\n\n  goToEmployeeList() {\n    this.router.navigate(['/employees']);\n  }\n\n  ngOnInit(): void {\n\n  }\n}","<div class=\"col-md-6 offset-md-3\">\n   \n    <!-- <form (ngSubmit)=\"onSubmit()\" class=\" p-3 pt-1 mt-4 \"\n        style=\"background:#f8f8f8;box-shadow:0 2px 5px rgba(0, 0, 0, 0.5)     \">\n        <h3 class=\"mt-4 mb-3 text-center\">Creat Employee</h3>\n        <div class=\"form-group\">\n            <label class=\"mb-2\">First Name</label>\n            <input type=\"text\" class=\"form-control\" id=\"firstName\" [(ngModel)]=\"employee.firstName\" name=\"firstName\">\n        </div>\n        <div class=\"form-group\">\n            <label class=\"mb-2\"> Last Name</label>\n            <input type=\"text\" class=\"form-control\" id=\"lastName\" [(ngModel)]=\"employee.lastName\" name=\"lastName\">\n        </div>\n        <div class=\"form-group\">\n            <label class=\"mb-2\"> Email Id</label>\n            <input type=\"text\" class=\"form-control\" id=\"emailId\" [(ngModel)]=\"employee. emailId\" name=\"emailId\">\n        </div>\n        <button class=\"btn btn-success\" type=\"submit\">Submit</button>\n\n    </form> -->\n    <form (ngSubmit)=\"onSubmit()\" class=\" p-3 pt-1 mt-4 \"\n        style=\"background:#f8f8f8;box-shadow:0 2px 5px rgba(0, 0, 0, 0.5)     \">\n        <h3 class=\"mt-4 mb-3 text-center\">Update Employee</h3>\n        <div class=\"form-group\">\n            <label class=\"mb-2\">First Name</label>\n            <input type=\"text\" class=\"form-control mb-3\" id=\"firstName\" [(ngModel)]=\"employee.firstName\"\n                name=\"firstName\">\n        </div>\n        <div class=\"form-group\">\n            <label class=\"mb-2\"> Last Name</label>\n            <input type=\"text\" class=\"form-control mb-3\" id=\"lastName\" [(ngModel)]=\"employee.lastName\" name=\"lastName\">\n        </div>\n        <div class=\"form-group\">\n            <label class=\"mb-2\"> Email Id</label>\n            <input type=\"text\" class=\"form-control mb-3\" id=\"emailId\" [(ngModel)]=\"employee. emailId\" name=\"emailId\">\n        </div>\n        <div class=\"text-center\">\n            <button class=\"btn btn-success\" type=\"submit\">Submit</button>\n        </div>\n\n    </form>\n\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}